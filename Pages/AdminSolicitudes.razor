@page "/adminsolicitudes"
@using BlazorTienda.Models
@using BlazorTienda.Services
@inject SolicitudService SolicitudService
@inject UsuarioService UsuarioService
@inject IJSRuntime JS

<PageTitle>Administrar Solicitudes</PageTitle>

<div class="container-fluid px-4 py-3">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="text-primary fw-bold mb-1">
                <i class="bi bi-clipboard-data me-2"></i>Administración de Solicitudes
            </h2>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb small">
                    <li class="breadcrumb-item"><a href="/">Inicio</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Solicitudes</li>
                </ol>
            </nav>
        </div>
        <div class="d-flex gap-2 align-items-center">
            <div class="input-group has-search" style="width: 250px;">
                <span class="input-group-text bg-white border-end-0"><i class="bi bi-search text-muted"></i></span>
                <input type="text" class="form-control border-start-0" placeholder="Buscar..."
                       @bind="filtroBusqueda" @oninput="() => FiltrarSolicitudes()" />
            </div>
            <select class="form-select" style="width: 180px;"
                    @bind="filtroEstado"
                    @bind:event="onchange">
                <option value="">Todos los estados</option>
                <option value="Pendiente">Pendientes</option>
                <option value="Aprobado">Aprobados</option>
                <option value="Rechazado">Rechazados</option>
            </select>
            <button class="btn btn-outline-secondary" @onclick="RecargarDatos" title="Recargar datos">
                <i class="bi bi-arrow-clockwise"></i>
            </button>
        </div>
    </div>

    <div class="card shadow-sm border-0">
        <div class="card-header bg-white border-0 py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Listado de Solicitudes</h5>
                <div class="text-muted small">
                    <span class="badge bg-warning bg-opacity-10 text-warning me-2">Pendiente</span>
                    <span class="badge bg-success bg-opacity-10 text-success me-2">Aprobado</span>
                    <span class="badge bg-danger bg-opacity-10 text-danger">Rechazado</span>
                </div>
            </div>
        </div>

        <div class="card-body p-0">
            @if (solicitudesPaginadas.Count == 0)
            {
                <div class="text-center py-5">
                    <i class="bi bi-clipboard-x text-muted" style="font-size: 3rem;"></i>
                    <h5 class="mt-3">No hay solicitudes registradas</h5>
                    <p class="text-muted">Intenta ajustar los filtros o recargar los datos</p>
                    <button class="btn btn-primary mt-2" @onclick="RecargarDatos">
                        <i class="bi bi-arrow-clockwise me-1"></i> Recargar datos
                    </button>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="ps-4">ID</th>
                                <th>Cliente</th>
                                <th>CI</th>
                                <th>Celular</th>
                                <th>Productos</th>
                                <th class="text-end">Total</th>
                                <th>Cuotas</th>
                                <th class="text-end">Cuota</th>
                                <th>Estado</th>
                                <th class="pe-4 text-end">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var solicitud in solicitudesPaginadas)
                            {
                                <tr class="@(solicitud.Estado == "Pendiente" ? "table-warning" : "")">
                                    <td class="ps-4 fw-medium">#@solicitud.Id</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="flex-shrink-0 me-2">
                                                <div class="avatar-sm bg-light rounded-circle d-flex align-items-center justify-content-center">
                                                    <i class="bi bi-person-fill text-primary"></i>
                                                </div>
                                            </div>
                                            <div class="flex-grow-1">
                                                <h6 class="mb-0">@solicitud.Usuario?.Nombre</h6>
                                                <small class="text-muted">@solicitud.FechaSolicitud.ToString("dd/MM/yyyy")</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@solicitud.DocumentoCliente</td>
                                    <td>@solicitud.CelularCliente</td>
                                    <td>
                                        <div class="d-flex flex-wrap gap-2">
                                            @foreach (var producto in solicitud.Productos.Take(2))
                                            {
                                                <div class="d-flex align-items-center gap-2">
                                                    <img src="@GetImageUrl(producto.ImagenUrl)"
                                                         alt="@producto.Nombre"
                                                         style="width:40px; height:40px; object-fit:cover;"
                                                         class="rounded border"
                                                         onerror="this.onerror=null;this.src='/img/placeholder.png'" />
                                                    <div>
                                                        <div class="fw-medium small">@producto.Nombre</div>
                                                        <small class="text-muted">@producto.Cantidad x @producto.PrecioUnitario.ToString("N2")</small>
                                                    </div>
                                                </div>
                                            }
                                            @if (solicitud.Productos.Count > 2)
                                            {
                                                <span class="badge bg-primary rounded-pill">+@(solicitud.Productos.Count - 2)</span>
                                            }
                                        </div>
                                    </td>
                                    <td class="text-end fw-bold">@solicitud.MontoTotal.ToString("N2")</td>
                                    <td>@solicitud.PlanCuotas</td>
                                    <td class="text-end">@solicitud.CuotaMensual.ToString("N2")</td>
                                    <td>
                                        <span class="badge @GetEstadoBadgeClass(solicitud.Estado) rounded-pill">
                                            @solicitud.Estado
                                        </span>
                                    </td>
                                    <td class="pe-4 text-end">
                                        <div class="d-flex justify-content-end gap-1">
                                            @if (solicitud.Estado == "Pendiente")
                                            {
                                                <button class="btn btn-sm btn-success"
                                                        @onclick="() => AprobarSolicitud(solicitud)"
                                                        title="Aprobar">
                                                    <i class="bi bi-check-lg"></i>
                                                </button>
                                                <button class="btn btn-sm btn-danger"
                                                        @onclick="() => RechazarSolicitud(solicitud)"
                                                        title="Rechazar">
                                                    <i class="bi bi-x-lg"></i>
                                                </button>
                                            }
                                            <button class="btn btn-sm btn-outline-primary"
                                                    @onclick="() => MostrarDetalles(solicitud)"
                                                    title="Ver detalles">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>

        @if (solicitudesPaginadas.Count > 0)
        {
            <div class="card-footer bg-white border-0">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="text-muted">
                            Mostrando <span class="fw-semibold">@((paginaActual - 1) * itemsPorPagina + 1)</span> a
                            <span class="fw-semibold">@Math.Min(paginaActual * itemsPorPagina, solicitudesFiltradas.Count)</span> de
                            <span class="fw-semibold">@solicitudesFiltradas.Count</span> registros
                        </div>
                    </div>
                    <div class="col-md-6">
                        <nav class="float-md-end">
                            <ul class="pagination mb-0">
                                <li class="page-item @(paginaActual == 1 ? "disabled" : "")">
                                    <a class="page-link" href="#" @onclick="() => CambiarPagina(paginaActual - 1)">
                                        <i class="bi bi-chevron-left"></i>
                                    </a>
                                </li>
                                @for (int i = 1; i <= totalPaginas; i++)
                                {
                                    <li class="page-item @(i == paginaActual ? "active" : "")">
                                        <a class="page-link" href="#" @onclick="() => CambiarPagina(i)">@i</a>
                                    </li>
                                }
                                <li class="page-item @(paginaActual == totalPaginas ? "disabled" : "")">
                                    <a class="page-link" href="#" @onclick="() => CambiarPagina(paginaActual + 1)">
                                        <i class="bi bi-chevron-right"></i>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@if (mostrarModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content border-0 shadow-lg">
                <div class="modal-header bg-light">
                    <h5 class="modal-title">
                        <i class="bi bi-file-text me-2"></i>Detalles de Solicitud #@solicitudSeleccionada.Id
                    </h5>
                    <button type="button" class="btn-close" @onclick="CerrarModal"></button>
                </div>
                <div class="modal-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="card border-0 shadow-sm h-100">
                                <div class="card-header bg-white border-0">
                                    <h6 class="fw-bold mb-0"><i class="bi bi-person me-2"></i>Información del Cliente</h6>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <label class="form-label small text-muted mb-1">Nombre completo</label>
                                        <div class="fw-medium">@solicitudSeleccionada.Usuario?.Nombre</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-6 mb-3">
                                            <label class="form-label small text-muted mb-1">Cédula de Identidad</label>
                                            <div>@solicitudSeleccionada.DocumentoCliente</div>
                                        </div>
                                        <div class="col-6 mb-3">
                                            <label class="form-label small text-muted mb-1">Celular</label>
                                            <div>@solicitudSeleccionada.CelularCliente</div>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label small text-muted mb-1">Trabajo</label>
                                        <div>@solicitudSeleccionada.TrabajoCliente</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card border-0 shadow-sm h-100">
                                <div class="card-header bg-white border-0">
                                    <h6 class="fw-bold mb-0"><i class="bi bi-credit-card me-2"></i>Detalles del Crédito</h6>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-6 mb-3">
                                            <label class="form-label small text-muted mb-1">Estado</label>
                                            <div>
                                                <span class="badge @GetEstadoBadgeClass(solicitudSeleccionada.Estado) rounded-pill">
                                                    @solicitudSeleccionada.Estado
                                                </span>
                                            </div>
                                        </div>
                                        <div class="col-6 mb-3">
                                            <label class="form-label small text-muted mb-1">Fecha</label>
                                            <div>@solicitudSeleccionada.FechaSolicitud.ToString("dd/MM/yyyy HH:mm")</div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-6 mb-3">
                                            <label class="form-label small text-muted mb-1">Plan de cuotas</label>
                                            <div>@solicitudSeleccionada.PlanCuotas cuotas</div>
                                        </div>
                                        <div class="col-6 mb-3">
                                            <label class="form-label small text-muted mb-1">Cuota mensual</label>
                                            <div class="fw-medium">@solicitudSeleccionada.CuotaMensual.ToString("N2")</div>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label small text-muted mb-1">Monto total</label>
                                        <div class="h4 fw-bold text-primary">@solicitudSeleccionada.MontoTotal.ToString("N2")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card border-0 shadow-sm">
                        <div class="card-header bg-white border-0">
                            <h6 class="fw-bold mb-0"><i class="bi bi-cart me-2"></i>Productos solicitados</h6>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table table-hover align-middle mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th style="width: 60px;"></th>
                                            <th>Producto</th>
                                            <th class="text-end">Precio unitario</th>
                                            <th class="text-center">Cantidad</th>
                                            <th class="text-end">Subtotal</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var producto in solicitudSeleccionada.Productos)
                                        {
                                            <tr>
                                                <td>
                                                    <img src="@GetImageUrl(producto.ImagenUrl)"
                                                         alt="@producto.Nombre"
                                                         style="width:50px; height:50px; object-fit:cover;"
                                                         class="rounded border"
                                                         onerror="this.onerror=null;this.src='https://via.placeholder.com/50?text=Prod'" />
                                                </td>
                                                <td>
                                                    <div class="fw-medium">@producto.Nombre</div>
                                                    <small class="text-muted">SKU: @(producto.Sku ?? "N/A")</small>
                                                </td>
                                                <td class="text-end">@producto.PrecioUnitario.ToString("N2")</td>
                                                <td class="text-center">@producto.Cantidad</td>
                                                <td class="text-end fw-bold">@((producto.PrecioUnitario * producto.Cantidad).ToString("N2"))</td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot class="table-light">
                                        <tr>
                                            <td colspan="4" class="text-end fw-bold">Total:</td>
                                            <td class="text-end fw-bold text-primary">@solicitudSeleccionada.MontoTotal.ToString("N2")</td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    @if (solicitudSeleccionada.Estado == "Pendiente")
                    {
                        <button class="btn btn-success me-2" @onclick="() => AprobarSolicitud(solicitudSeleccionada)">
                            <i class="bi bi-check-lg me-1"></i> Aprobar
                        </button>
                        <button class="btn btn-danger me-2" @onclick="() => RechazarSolicitud(solicitudSeleccionada)">
                            <i class="bi bi-x-lg me-1"></i> Rechazar
                        </button>
                    }
                    <button class="btn btn-outline-secondary" @onclick="CerrarModal">
                        <i class="bi bi-x-lg me-1"></i> Cerrar
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Solicitud> solicitudes = new();
    private List<Solicitud> solicitudesFiltradas = new();
    private List<Solicitud> solicitudesPaginadas = new();
    private Solicitud? solicitudSeleccionada = null;
    private string filtroBusqueda = string.Empty;
    private string filtroEstado = string.Empty;
    private int paginaActual = 1;
    private int itemsPorPagina = 10;
    private int totalPaginas = 1;
    private bool mostrarModal = false;

    protected override async Task OnInitializedAsync()
    {
        await CargarSolicitudes();
    }

    private string GetImageUrl(string imageUrl)
    {
        if (string.IsNullOrEmpty(imageUrl))
            return "/img/placeholder.png";

        if (imageUrl.StartsWith("http://") || imageUrl.StartsWith("https://") || imageUrl.StartsWith("www."))
            return imageUrl;

        return imageUrl.StartsWith("/") ? imageUrl : $"/{imageUrl.TrimStart('/')}";
    }

    private async Task CargarSolicitudes()
    {
        solicitudes = await SolicitudService.ObtenerTodasSolicitudesAsync();

        // Cargar los usuarios relacionados para cada solicitud
        foreach (var solicitud in solicitudes)
        {
            if (solicitud.Usuario == null && solicitud.UsuarioId > 0)
            {
                solicitud.Usuario = UsuarioService.ObtenerUsuarioPorId(solicitud.UsuarioId);
            }
        }

        FiltrarSolicitudes();
    }

    private void FiltrarSolicitudes()
    {
        var query = solicitudes.AsQueryable();

        if (!string.IsNullOrEmpty(filtroEstado))
        {
            query = query.Where(s => s.Estado == filtroEstado);
        }

        if (!string.IsNullOrEmpty(filtroBusqueda))
        {
            var busqueda = filtroBusqueda.ToLower();
            query = query.Where(s =>
                (s.Usuario != null && s.Usuario.Nombre.ToLower().Contains(busqueda)) ||
                s.DocumentoCliente.ToLower().Contains(busqueda) ||
                s.CelularCliente.ToLower().Contains(busqueda) ||
                s.Productos.Any(p => p.Nombre.ToLower().Contains(busqueda))
            );
        }

        solicitudesFiltradas = query.ToList();
        totalPaginas = (int)Math.Ceiling((double)solicitudesFiltradas.Count / itemsPorPagina);
        CambiarPagina(1);
    }

    private void CambiarPagina(int pagina)
    {
        paginaActual = Math.Clamp(pagina, 1, totalPaginas);
        var skip = (paginaActual - 1) * itemsPorPagina;
        solicitudesPaginadas = solicitudesFiltradas
            .Skip(skip)
            .Take(itemsPorPagina)
            .ToList();
    }

    private async Task RecargarDatos()
    {
        await CargarSolicitudes();
    }

    private async Task AprobarSolicitud(Solicitud solicitud)
    {
        if (await JS.InvokeAsync<bool>("confirm", $"¿Aprobar solicitud de {solicitud.Usuario?.Nombre} por Bs. {solicitud.MontoTotal.ToString("N2")}?"))
        {
            solicitud.Estado = "Aprobado";
            solicitud.FechaAprobacion = DateTime.Now;
            await SolicitudService.ActualizarSolicitudAsync(solicitud);
            await CargarSolicitudes();
            CerrarModal();
        }
    }

    private async Task RechazarSolicitud(Solicitud solicitud)
    {
        if (await JS.InvokeAsync<bool>("confirm", $"¿Rechazar solicitud de {solicitud.Usuario?.Nombre}?"))
        {
            solicitud.Estado = "Rechazado";
            await SolicitudService.ActualizarSolicitudAsync(solicitud);
            await CargarSolicitudes();
            CerrarModal();
        }
    }

    private void MostrarDetalles(Solicitud solicitud)
    {
        solicitudSeleccionada = solicitud;
        mostrarModal = true;
    }

    private void CerrarModal()
    {
        mostrarModal = false;
        solicitudSeleccionada = null;
    }

    private string GetEstadoBadgeClass(string estado)
    {
        return estado switch
        {
            "Pendiente" => "bg-warning bg-opacity-10 text-warning",
            "Aprobado" => "bg-success bg-opacity-10 text-success",
            "Rechazado" => "bg-danger bg-opacity-10 text-danger",
            _ => "bg-secondary bg-opacity-10 text-secondary"
        };
    }
}

