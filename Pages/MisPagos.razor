@page "/mispagos"
@using BlazorTienda.Models
@using BlazorTienda.Services
@inject SolicitudService SolicitudService
@inject NavigationManager Navigation
@inject SesionService SesionService
@inject PagoMemoryService PagoService
@inject IJSRuntime JS
@inject HttpClient Http

<PageTitle>Mis Pagos</PageTitle>

<div class="container-fluid px-4 py-3">
    @if (SesionService.UsuarioActual == null)
    {
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-primary text-white py-3">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-person-lock fs-3 me-3"></i>
                            <div>
                                <h3 class="mb-0">Acceso Requerido</h3>
                                <p class="mb-0 opacity-75">Debes iniciar sesión para ver tus pagos</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-4 text-center">
                        <div class="py-4">
                            <i class="bi bi-shield-lock text-muted" style="font-size: 4rem;"></i>
                            <h4 class="mt-4">Acceso restringido</h4>
                            <p class="text-muted mb-4">Para acceder a tus pagos y cuotas pendientes, por favor inicia sesión con tu cuenta.</p>
                            <button class="btn btn-primary px-4 py-2" @onclick="RedirigirALogin">
                                <i class="bi bi-box-arrow-in-right me-2"></i>Iniciar Sesión
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="card shadow-sm border-0">
            <div class="card-header bg-white border-0 py-3">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h2 class="text-primary fw-bold mb-1">
                            <i class="bi bi-credit-card me-2"></i>Mis Pagos
                        </h2>
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb small">
                                <li class="breadcrumb-item"><a href="/">Inicio</a></li>
                                <li class="breadcrumb-item active" aria-current="page">Mis Pagos</li>
                            </ol>
                        </nav>
                    </div>
                    <button class="btn btn-outline-danger" @onclick="CerrarSesion">
                        <i class="bi bi-box-arrow-left me-1"></i>Cerrar sesión
                    </button>
                </div>

                <!-- Resumen de pagos -->
                <div class="row mt-4 g-3">
                    <div class="col-md-4">
                        <div class="card border-start border-primary border-4 h-100">
                            <div class="card-body">
                                <div class="d-flex align-items-center">
                                    <div class="bg-primary bg-opacity-10 p-3 rounded me-3">
                                        <i class="bi bi-currency-dollar text-primary fs-4"></i>
                                    </div>
                                    <div>
                                        <span class="text-muted small">Total Adeudado</span>
                                        <h3 class="mb-0">@FormatBs(TotalAdeudado)</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="card border-start border-warning border-4 h-100">
                            <div class="card-body">
                                <div class="d-flex align-items-center">
                                    <div class="bg-warning bg-opacity-10 p-3 rounded me-3">
                                        <i class="bi bi-clock-history text-warning fs-4"></i>
                                    </div>
                                    <div>
                                        <span class="text-muted small">Pagos Pendientes</span>
                                        <h3 class="mb-0">@Solicitudes.Count(s => s.MontoPendiente > 0)</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="card border-start border-success border-4 h-100">
                            <div class="card-body">
                                <div class="d-flex align-items-center">
                                    <div class="bg-success bg-opacity-10 p-3 rounded me-3">
                                        <i class="bi bi-check-circle text-success fs-4"></i>
                                    </div>
                                    <div>
                                        <span class="text-muted small">Pagos Completados</span>
                                        <h3 class="mb-0">@Solicitudes.Count(s => s.MontoPendiente <= 0)</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-body p-0">
                @if (Solicitudes.Count == 0)
                {
                    <div class="text-center py-5">
                        <i class="bi bi-check2-circle text-muted" style="font-size: 3rem;"></i>
                        <h3 class="mt-3">¡Todo al día!</h3>
                        <p class="text-muted mb-4">No tienes solicitudes aprobadas pendientes de pago.</p>
                        <a href="/tienda" class="btn btn-outline-primary">
                            <i class="bi bi-arrow-left me-2"></i>Volver a la tienda
                        </a>
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th class="ps-4">Productos</th>
                                    <th class="text-end">Total</th>
                                    <th class="text-end">Pagado</th>
                                    <th class="text-end">Pendiente</th>
                                    <th class="text-end">Cuota</th>
                                    <th>Estado</th>
                                    <th class="pe-4 text-center">Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var solicitud in Solicitudes.OrderByDescending(s => s.MontoPendiente))
                                {
                                    <tr>
                                        <td class="ps-4">
                                            <div class="d-flex flex-wrap gap-3">
                                                @foreach (var producto in solicitud.Productos.Take(2))
                                                {
                                                    <div class="d-flex align-items-center gap-2">
                                                        <img src="@GetImageUrl(producto.ImagenUrl)"
                                                             alt="@producto.Nombre"
                                                             style="width:50px; height:50px; object-fit:cover;"
                                                             class="rounded border"
                                                             onerror="this.onerror=null;this.src='/img/placeholder.png'" />
                                                        <div>
                                                            <div class="fw-medium">@producto.Nombre</div>
                                                            <small class="text-muted">@solicitud.FechaAprobacion.ToString("dd/MM/yyyy")</small>
                                                        </div>
                                                    </div>
                                                }
                                                @if (solicitud.Productos.Count > 2)
                                                {
                                                    <span class="badge bg-primary rounded-pill">+@(solicitud.Productos.Count - 2)</span>
                                                }
                                            </div>
                                        </td>
                                        <td class="text-end fw-bold">@FormatBs(solicitud.MontoTotal)</td>
                                        <td class="text-end">@FormatBs(solicitud.MontoPagado)</td>
                                        <td class="text-end fw-bold @(solicitud.MontoPendiente > 0 ? "text-danger" : "text-success")">
                                            @FormatBs(solicitud.MontoPendiente)
                                        </td>
                                        <td class="text-end">@FormatBs(solicitud.CuotaMensual)</td>
                                        <td>
                                            <span class="badge @(solicitud.MontoPendiente > 0 ? "bg-warning bg-opacity-10 text-warning" : "bg-success bg-opacity-10 text-success") rounded-pill">
                                                @(solicitud.MontoPendiente > 0 ? "Pendiente" : "Completado")
                                            </span>
                                        </td>
                                        <td class="pe-4 text-center">
                                            <div class="d-flex justify-content-center gap-2">
                                                @if (solicitud.MontoPendiente > 0)
                                                {
                                                    <button class="btn btn-sm btn-primary" @onclick="() => MostrarModalPago(solicitud)">
                                                        <i class="bi bi-cash-coin me-1"></i>Pagar
                                                    </button>
                                                }
                                                <button class="btn btn-sm btn-outline-secondary" @onclick="() => VerDetalles(solicitud)">
                                                    <i class="bi bi-eye"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    }

    <!-- Modal de Pago -->
    @if (MostrarModal && SolicitudSeleccionada != null)
    {
        <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content border-0 shadow-lg">
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title">
                            <i class="bi bi-cash-stack me-2"></i>Registrar Pago
                        </h5>
                        <button type="button" class="btn-close btn-close-white" @onclick="CerrarModal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="container">
                            <div class="row">
                                <div class="col-12">
                                    <div class="alert alert-info">
                                        <i class="bi bi-info-circle me-2"></i>
                                        Selecciona el método de pago para tu cuota
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label class="form-label">Método de pago</label>
                                        <select class="form-select" @onchange="OnMetodoPagoChanged">
                                            <option value="efectivo" selected="@(metodoPago == "efectivo")">Efectivo</option>
                                            <option value="tarjeta" selected="@(metodoPago == "tarjeta")">Tarjeta de débito/crédito</option>
                                            <option value="qr" selected="@(metodoPago == "qr")">Pago por QR</option>
                                        </select>
                                    </div>

                                    @if (metodoPago == "tarjeta")
                                    {
                                        <div class="card border-0 shadow-sm p-3 mb-3">
                                            <div class="mb-3">
                                                <label class="form-label">Número de tarjeta</label>
                                                <input type="text" class="form-control" @bind="numeroTarjeta" 
                                                       @oninput="FormatearNumeroTarjeta"
                                                       maxlength="19"
                                                       placeholder="0000 0000 0000 0000" />
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="mb-3">
                                                        <label class="form-label">Fecha de expiración</label>
                                                        <input type="text" class="form-control" @bind="fechaExpiracion" 
                                                               @oninput="FormatearFechaExpiracion"
                                                               maxlength="5"
                                                               placeholder="MM/AA" />
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="mb-3">
                                                        <label class="form-label">CVV</label>
                                                        <input type="text" class="form-control" @bind="cvv" 
                                                               placeholder="123" maxlength="3" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">Nombre del titular</label>
                                                <input type="text" class="form-control" @bind="nombreTitular" 
                                                       placeholder="Nombre como aparece en la tarjeta" />
                                            </div>
                                        </div>
                                    }
                                    else if (metodoPago == "qr")
                                    {
                                        <div class="card border-0 shadow-sm p-3 mb-3">
                                            <div class="text-center">
                                                @{
                                                    var qrText = new System.Text.StringBuilder();
                                                    qrText.AppendLine("CLICK SHOP");
                                                    qrText.AppendLine("-------------------");
                                                    qrText.AppendLine("PAGO DE CUOTA");
                                                    qrText.AppendLine($"MONTO: Bs. {MontoPago:N2}");
                                                    qrText.AppendLine($"PRODUCTO: {SolicitudSeleccionada?.Productos.FirstOrDefault()?.Nombre}");
                                                    if (SolicitudSeleccionada?.Productos.Count > 1)
                                                    {
                                                        qrText.AppendLine($"+ {SolicitudSeleccionada.Productos.Count - 1} productos más");
                                                    }
                                                    qrText.AppendLine("-------------------");
                                                }
                                                <img src="https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=@(qrText.ToString())" 
                                                     alt="Código QR de pago" 
                                                     class="img-fluid mb-3" />
                                                <div class="text-start">
                                                    <h6 class="fw-bold mb-2">Detalles del pago:</h6>
                                                    <p class="mb-1"><small>Cliente: @SesionService.UsuarioActual?.Nombre</small></p>
                                                    <p class="mb-1"><small>Fecha: @DateTime.Now.ToString("dd/MM/yyyy HH:mm")</small></p>
                                                    <p class="mb-1"><small>Monto: Bs. @MontoPago.ToString("N2")</small></p>
                                                    <p class="mb-0"><small>Método: Pago QR</small></p>
                                                </div>
                                            </div>
                                            <div class="alert alert-info">
                                                <i class="bi bi-info-circle me-2"></i>
                                                El código QR expirará en 15 minutos
                                            </div>
                                        </div>
                                    }

                                    <div class="alert alert-warning mt-3">
                                        <i class="bi bi-info-circle me-2"></i>
                                        El administrador verificará tu pago antes de aplicarlo al saldo.
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Comprobante de pago (opcional)</label>
                                        <InputFile class="form-control" OnChange="HandleFileUpload" />
                                        @if (ComprobanteFile != null)
                                        {
                                            <div class="mt-2">
                                                <span class="badge bg-info">@ComprobanteFile.Name</span>
                                                <button class="btn btn-sm btn-outline-danger ms-2" @onclick="EliminarComprobante">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer border-0">
                        <button type="button" class="btn btn-secondary" @onclick="CerrarModal">
                            <i class="bi bi-x-lg me-2"></i>Cancelar
                        </button>
                        <button type="button" class="btn btn-primary" @onclick="RealizarPago"
                                disabled="@(MontoPago < Math.Round(SolicitudSeleccionada.CuotaMensual, 2) || MontoPago > SolicitudSeleccionada.MontoPendiente)">
                            <i class="bi bi-send-check me-2"></i>Enviar Pago
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Modal de Detalles -->
    @if (MostrarDetallesModal && SolicitudSeleccionada != null)
    {
        <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content border-0 shadow-lg">
                    <div class="modal-header bg-light">
                        <h5 class="modal-title">
                            <i class="bi bi-receipt me-2"></i>Detalles de Compra #@SolicitudSeleccionada.Id
                        </h5>
                        <button type="button" class="btn-close" @onclick="CerrarDetallesModal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <div class="card border-0 shadow-sm h-100">
                                    <div class="card-header bg-white">
                                        <h6 class="mb-0"><i class="bi bi-card-checklist me-2"></i>Información del Crédito</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <label class="form-label small text-muted mb-1">Estado</label>
                                            <div>
                                                <span class="badge @(SolicitudSeleccionada.MontoPendiente > 0 ? "bg-warning bg-opacity-10 text-warning" : "bg-success bg-opacity-10 text-success") rounded-pill">
                                                    @(SolicitudSeleccionada.MontoPendiente > 0 ? "Pendiente" : "Completado")
                                                </span>
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label small text-muted mb-1">Fecha aprobación</label>
                                            <div>@SolicitudSeleccionada.FechaAprobacion.ToString("dd/MM/yyyy")</div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label small text-muted mb-1">Plan de cuotas</label>
                                            <div>@SolicitudSeleccionada.PlanCuotas cuotas</div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label small text-muted mb-1">Valor cuota</label>
                                            <div>@FormatBs(SolicitudSeleccionada.CuotaMensual)</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="card border-0 shadow-sm h-100">
                                    <div class="card-header bg-white">
                                        <h6 class="mb-0"><i class="bi bi-graph-up me-2"></i>Resumen Financiero</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <label class="form-label small text-muted mb-1">Monto total</label>
                                            <div class="fw-bold">@FormatBs(SolicitudSeleccionada.MontoTotal)</div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label small text-muted mb-1">Pagado</label>
                                            <div class="text-success fw-bold">@FormatBs(SolicitudSeleccionada.MontoPagado)</div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label small text-muted mb-1">Pendiente</label>
                                            <div class="text-danger fw-bold">@FormatBs(SolicitudSeleccionada.MontoPendiente)</div>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label small text-muted mb-1">Último pago</label>
                                            <div>@(SolicitudSeleccionada.Pagos.Any() ? SolicitudSeleccionada.Pagos.Max(p => p.FechaPago).ToString("dd/MM/yyyy") : "N/A")</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card border-0 shadow-sm mb-4">
                            <div class="card-header bg-white">
                                <h6 class="mb-0"><i class="bi bi-cart me-2"></i>Productos</h6>
                            </div>
                            <div class="card-body p-0">
                                <div class="table-responsive">
                                    <table class="table table-hover align-middle mb-0">
                                        <thead class="table-light">
                                            <tr>
                                                <th style="width: 60px;"></th>
                                                <th>Producto</th>
                                                <th class="text-end">Precio</th>
                                                <th class="text-center">Cantidad</th>
                                                <th class="text-end">Subtotal</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var producto in SolicitudSeleccionada.Productos)
                                            {
                                                <tr>
                                                    <td>
                                                        <img src="@GetImageUrl(producto.ImagenUrl)"
                                                             alt="@producto.Nombre"
                                                             style="width:50px; height:50px; object-fit:cover;"
                                                             class="rounded border"
                                                             onerror="this.onerror=null;this.src='/img/placeholder.png'" />
                                                    </td>
                                                    <td>
                                                        <div class="fw-medium">@producto.Nombre</div>
                                                        <small class="text-muted">SKU: @(producto.Sku ?? "N/A")</small>
                                                    </td>
                                                    <td class="text-end">@FormatBs(producto.PrecioUnitario)</td>
                                                    <td class="text-center">@producto.Cantidad</td>
                                                    <td class="text-end fw-bold">@FormatBs(producto.PrecioUnitario * producto.Cantidad)</td>
                                                </tr>
                                            }
                                        </tbody>
                                        <tfoot class="table-light">
                                            <tr>
                                                <td colspan="4" class="text-end fw-bold">Total:</td>
                                                <td class="text-end fw-bold text-primary">@FormatBs(SolicitudSeleccionada.MontoTotal)</td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="card border-0 shadow-sm">
                            <div class="card-header bg-white">
                                <h6 class="mb-0"><i class="bi bi-clock-history me-2"></i>Historial de Pagos</h6>
                            </div>
                            <div class="card-body p-0">
                                <div class="table-responsive">
                                    <table class="table table-hover align-middle mb-0">
                                        <thead class="table-light">
                                            <tr>
                                                <th>Fecha</th>
                                                <th class="text-end">Monto</th>
                                                <th>Método</th>
                                                <th>Estado</th>
                                                <th class="text-center">Comprobante</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var pago in SolicitudSeleccionada.Pagos.OrderByDescending(p => p.FechaPago))
                                            {
                                                <tr>
                                                    <td>@pago.FechaPago.ToString("dd/MM/yyyy")</td>
                                                    <td class="text-end fw-bold">@FormatBs(pago.Monto)</td>
                                                    <td>@pago.MetodoPago</td>
                                                    <td>
                                                        <span class="badge @(pago.Estado == "Aprobado" ? "bg-success bg-opacity-10 text-success" : pago.Estado == "Rechazado" ? "bg-danger bg-opacity-10 text-danger" : "bg-warning bg-opacity-10 text-warning") rounded-pill">
                                                            @pago.Estado
                                                        </span>
                                                    </td>
                                                    <td class="text-center">
                                                        @if (!string.IsNullOrEmpty(pago.ComprobanteUrl))
                                                        {
                                                            <a href="@pago.ComprobanteUrl" target="_blank" class="btn btn-sm btn-outline-primary">
                                                                <i class="bi bi-download"></i>
                                                            </a>
                                                        }
                                                        else
                                                        {
                                                            <span class="text-muted">N/A</span>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer border-0">
                        <button type="button" class="btn btn-secondary" @onclick="CerrarDetallesModal">
                            <i class="bi bi-x-lg me-2"></i>Cerrar
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Notificación -->
    @if (MostrarNotificacion)
    {
        <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1100">
            <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header bg-success text-white">
                    <strong class="me-auto">
                        <i class="bi bi-check-circle me-2"></i>Pago registrado
                    </strong>
                    <button type="button" class="btn-close btn-close-white" @onclick="CerrarNotificacion"></button>
                </div>
                <div class="toast-body">
                    <p>Tu pago de @FormatBs(MontoPago) ha sido registrado y está pendiente de aprobación.</p>
                    @if (!string.IsNullOrEmpty(ComprobanteUrl))
                    {
                        <button class="btn btn-sm btn-outline-light" @onclick="DescargarComprobante">
                            <i class="bi bi-download me-1"></i>Ver comprobante
                        </button>
                    }
                </div>
            </div>
        </div>
    }
</div>
@if (Solicitudes.Count == 0)
{
    <div class="text-center py-5">
        @if (TieneSolicitudesPendientes)
        {
            <i class="bi bi-hourglass-split text-warning" style="font-size: 3rem;"></i>
            <h3 class="mt-3">Solicitudes en Proceso</h3>
            <p class="text-muted mb-4">
                Tienes @CantidadSolicitudesPendientes solicitudes pendientes de aprobación.
                <br>Aparecerán aquí una vez sean aprobadas.
            </p>
        }
        else
        {
            <i class="bi bi-check2-circle text-muted" style="font-size: 3rem;"></i>
            <h3 class="mt-3">¡Todo al día!</h3>
            <p class="text-muted mb-4">No tienes solicitudes aprobadas pendientes de pago.</p>
        }
        <a href="/tienda" class="btn btn-outline-primary">
            <i class="bi bi-arrow-left me-2"></i>Volver a la tienda
        </a>
    </div>
}

@code {
    private List<Solicitud> Solicitudes = new();
    private decimal TotalAdeudado = 0;
    private bool MostrarModal = false;
    private bool MostrarDetallesModal = false;
    private bool MostrarNotificacion = false;
    private Solicitud? SolicitudSeleccionada;
    private decimal MontoPago = 0;
    private string metodoPago = "efectivo";
    private string numeroTarjeta = string.Empty;
    private string fechaExpiracion = string.Empty;
    private string cvv = string.Empty;
    private string nombreTitular = string.Empty;
    private bool TieneSolicitudesPendientes { get; set; }
    private int CantidadSolicitudesPendientes { get; set; }
    private IBrowserFile? ComprobanteFile;
    private string? ComprobanteUrl;

    protected override async Task OnInitializedAsync()
    {
        if (SesionService.UsuarioActual != null)
        {
            await CargarSolicitudes();
            await CargarSolicitudesPendientes();
        }
    }

    private async Task CargarSolicitudesPendientes()
    {
        if (SesionService.UsuarioActual == null) return;
        
        var solicitudesPendientes = await SolicitudService.ObtenerSolicitudesPendientesRechazadas(SesionService.UsuarioActual.Id);
        TieneSolicitudesPendientes = solicitudesPendientes.Any();
        CantidadSolicitudesPendientes = solicitudesPendientes.Count;
    }

    private async Task CargarSolicitudes()
    {
        if (SesionService.UsuarioActual == null) return;

        // Obtener solo solicitudes aprobadas
        var todasSolicitudes = await SolicitudService.ObtenerSolicitudesPorUsuarioAsync(SesionService.UsuarioActual.Id);

        // Filtrar solo las aprobadas
        Solicitudes = todasSolicitudes.Where(s => s.MostrarEnMisPagos).ToList();

        foreach (var solicitud in Solicitudes)
        {
            // Calcular solo pagos aprobados
            solicitud.MontoPagado = solicitud.Pagos
                .Where(p => p.Estado == "Aprobado")
                .Sum(p => p.Monto);
        }

        TotalAdeudado = Solicitudes.Sum(s => s.MontoPendiente);
    }

    private string FormatBs(decimal monto)
    {
        return $"Bs. {monto.ToString("N2")}";
    }

    private string GetImageUrl(string? imageUrl)
    {
        if (string.IsNullOrEmpty(imageUrl)) return "/img/placeholder.png";
        if (imageUrl.StartsWith("http")) return imageUrl;
        return imageUrl.StartsWith("/") ? imageUrl : $"/{imageUrl.TrimStart('/')}";
    }

    private void RedirigirALogin()
    {
        Navigation.NavigateTo("/login");
    }

    private void CerrarSesion()
    {
        Navigation.NavigateTo("/", forceLoad: true);
    }

    private void MostrarModalPago(Solicitud solicitud)
    {
        SolicitudSeleccionada = solicitud;
        MontoPago = Math.Min(solicitud.CuotaMensual, solicitud.MontoPendiente);
        MostrarModal = true;
        MostrarNotificacion = false;
    }

    private void CerrarModal()
    {
        MostrarModal = false;
        SolicitudSeleccionada = null;
    }

    private void VerDetalles(Solicitud solicitud)
    {
        SolicitudSeleccionada = solicitud;
        MostrarDetallesModal = true;
    }

    private void CerrarDetallesModal()
    {
        MostrarDetallesModal = false;
        SolicitudSeleccionada = null;
    }

    private void OnMetodoPagoChanged(ChangeEventArgs e)
    {
        if (e.Value is string newMetodo)
        {
            metodoPago = newMetodo;
        }
    }

    private void FormatearNumeroTarjeta(ChangeEventArgs e)
    {
        if (e.Value is string value)
        {
            string numeros = new string(value.Where(char.IsDigit).ToArray());
            string formateado = string.Empty;
            for (int i = 0; i < numeros.Length; i++)
            {
                if (i > 0 && i % 4 == 0)
                {
                    formateado += " ";
                }
                formateado += numeros[i];
            }
            numeroTarjeta = formateado;
        }
    }

    private void FormatearFechaExpiracion(ChangeEventArgs e)
    {
        if (e.Value is string value)
        {
            string numeros = new string(value.Where(char.IsDigit).ToArray());
            string formateado = string.Empty;
            for (int i = 0; i < numeros.Length; i++)
            {
                if (i == 2)
                {
                    formateado += "/";
                }
                formateado += numeros[i];
            }
            fechaExpiracion = formateado;
        }
    }

    private async Task RealizarPago()
    {
        if (SolicitudSeleccionada == null || SesionService.UsuarioActual == null) return;

        try
        {
            string? comprobanteUrl = null;

            // Subir comprobante si existe
            if (ComprobanteFile != null)
            {
                // Implementación simple sin servidor - guardar como data URL
                var buffer = new byte[ComprobanteFile.Size];
                await ComprobanteFile.OpenReadStream().ReadAsync(buffer);
                comprobanteUrl = $"data:{ComprobanteFile.ContentType};base64,{Convert.ToBase64String(buffer)}";
            }

            var pago = new Pago
            {
                SolicitudId = SolicitudSeleccionada.Id,
                UsuarioId = SesionService.UsuarioActual.Id,
                Monto = MontoPago,
                MetodoPago = metodoPago,
                FechaPago = DateTime.Now,
                Estado = "Pendiente",
                ComprobanteUrl = comprobanteUrl
            };

            // Registrar el pago
            await PagoService.RegistrarPagoAsync(pago);

            // Actualizar la solicitud
            await SolicitudService.RegistrarPagoAsync(SolicitudSeleccionada.Id, pago);

            // Recargar datos
            await CargarSolicitudes();

            MostrarNotificacion = true;
            MostrarModal = false;
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Error al registrar pago: {ex.Message}");
        }
    }

    private void CerrarNotificacion()
    {
        MostrarNotificacion = false;
    }

    private async Task DescargarComprobante()
    {
        if (!string.IsNullOrEmpty(ComprobanteUrl))
        {
            await JS.InvokeVoidAsync("open", ComprobanteUrl, "_blank");
        }
    }

    private async Task HandleFileUpload(InputFileChangeEventArgs e)
    {
        ComprobanteFile = e.File;
        var maxAllowedSize = 1024 * 1024 * 5; // 5MB

        if (ComprobanteFile.Size > maxAllowedSize)
        {
            await JS.InvokeVoidAsync("alert", "El archivo es demasiado grande (máximo 5MB)");
            ComprobanteFile = null;
            return;
        }
    }

    private void EliminarComprobante()
    {
        ComprobanteFile = null;
        ComprobanteUrl = null;
    }
}



